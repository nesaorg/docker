version: '3.8'
services:
  chain:
    image: ghcr.io/nesaorg/nesachain/nesachain:test
    container_name: nesachain
    restart: always
    network_mode: host
    env_file: ../.env
    volumes:
      - nesachain-data:/app/

  proxy:
    image: nginxproxy/nginx-proxy:alpine
    restart: always
    ports:
      - 80:80
      - 443:443
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: "true"
    volumes:
      - /srv/proxy-tier/certs:/etc/nginx/certs:ro
      - /srv/proxy-tier/vhost.d:/etc/nginx/vhost.d
      - /srv/proxy-tier/html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro
  letsencrypt-companion:
    image: nginxproxy/acme-companion
    restart: always
    volumes:
      - /srv/proxy-tier/certs:/etc/nginx/certs
      - /srv/proxy-tier/acme:/etc/acme.sh
      - /srv/proxy-tier/vhost.d:/etc/nginx/vhost.d
      - /srv/proxy-tier/html:/usr/share/nginx/html
      - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
      - proxy
  ipfs:
    image: ipfs/kubo:v0.28.0
    container_name: ipfs
    restart: always
    network_mode: host
    volumes:
      - ipfs-data:/data/ipfs
      - ipfs-staging:/export
    environment:
       IPFS_USERNAME: admin
       IPFS_PASSWORD: password
    entrypoint: >
      sh -c "
      ipfs config --json API.HTTPHeaders.Access-Control-Allow-Origin '[\"*\"]' &&
      ipfs config --json API.HTTPHeaders.Access-Control-Allow-Methods '[\"PUT\", \"POST\", \"GET\"]' &&
      ipfs config --json API.HTTPHeaders.Access-Control-Allow-Headers '[\"Authorization\"]' &&
      ipfs config --json API.HTTPHeaders.Authorization '[\"Basic $(echo -n ${IPFS_USERNAME}:${IPFS_PASSWORD} | base64)\"]' &&
      ipfs daemon --enable-pubsub-experiment
      "
volumes:
    nesachain-data:
    ipfs-data:
    ipfs-staging: